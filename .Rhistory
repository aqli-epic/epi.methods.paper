z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) %>%
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(ggplot2)
library(readr)
library(tidytext)
library(tidyr)
library(tidyverse)
library(sf)
library(usethis)
library(devtools)
library(readxl)
# load and document (for automatic rendering of the roxygen comments into a man file) to keep things updated
devtools::load_all()
devtools::document()
# custom operators
`%notin%` <- Negate(`%in%`)
# global parameters
gbd_year <- 2019
# Notes about the Global Exposure Mortality Model in Burnett et al. (2018)
# Focus primarily on 15 cohorts examining long-term exposure and mortality.
# 1 cohort is a study of Chinese men w/ exposures up to 84.
# Focus on non-accidental deaths (nearly all due to non-communicable diseases)
# and lower respiratory infections.
# Complimented with data from 26 additional cohorts (in which no access to
# subject level info).
# GEMM estimated as a common (possibly nonlinear) hazard ratio model among
# the 41 cohorts by pooling predictions of the hazard ratio among cohorts over
# their range of exposure.
# setting some parameters
ncdlri <- 1 #?
tmrel <- 2.4 # theoretical minimum pm level as per the paper.
gemm_rr_raw <- read_csv("./data/raw/gemm_rr.csv")
# making a copy of the raw file
gemm_rr <- as_tibble(gemm_rr_raw)
# remove an extra space from all character columns with numeric information and also remove an extra space from "stroke "
gemm_rr$`Age Range (Years)` <- str_remove(gemm_rr$`Age Range (Years)`, "\\s")
gemm_rr$theta <- str_remove(gemm_rr$theta, "\\s")
gemm_rr$theta_se <- str_remove(gemm_rr$theta_se, "\\s")
gemm_rr$alpha <- str_remove(gemm_rr$alpha, "\\s")
gemm_rr$mu <- str_remove(gemm_rr$mu, "\\s")
gemm_rr$nu <- str_remove(gemm_rr$nu, "\\s")
gemm_rr$Cause <- str_replace(gemm_rr$Cause, "Stroke\\s", "Stroke")
# coercing "numeric" columns to class numeric.
gemm_rr$`Age Range (Years)` <- as.numeric(gemm_rr$`Age Range (Years)`)
gemm_rr$theta <- as.numeric(gemm_rr$theta)
gemm_rr$theta_se <- as.numeric(gemm_rr$theta_se)
gemm_rr$alpha <- as.numeric(gemm_rr$alpha)
gemm_rr$mu <- as.numeric(gemm_rr$mu)
gemm_rr$nu <- as.numeric(gemm_rr$nu)
colnames(gemm_rr)[2] <- "age_range"
# assigning cause ids to causes (these ids will remain same for GBD and Meta Regression bits) and save this new dataset as gemm_rr_pre_cause_pm_expanding (more about this in next step)
gemm_rr_pre_cause_pm_expanding <- gemm_rr %>%
mutate(cause_id = 0,
cause_id = ifelse(cause_name == "Chronic obstructive pulmonary disease", 509, cause_id),
cause_id = ifelse(cause_name == "Ischaemic heart disease", 493, cause_id),
cause_id = ifelse(cause_name == "Lower respiratory infections", 322, cause_id),
cause_id = ifelse(cause_name == "Stroke", 494, cause_id),
cause_id = ifelse(cause_name == "Lung cancer", 426, cause_id),
cause_id = ifelse(cause_name == "Non-communicable disease and lower respiratory infections", 9999, cause_id))
gemm_rr_raw <- read_csv("./data/raw/gemm_rr.csv")
# making a copy of the raw file
gemm_rr <- as_tibble(gemm_rr_raw)
# remove an extra space from all character columns with numeric information and also remove an extra space from "stroke "
gemm_rr$`Age Range (Years)` <- str_remove(gemm_rr$`Age Range (Years)`, "\\s")
gemm_rr$theta <- str_remove(gemm_rr$theta, "\\s")
gemm_rr$theta_se <- str_remove(gemm_rr$theta_se, "\\s")
gemm_rr$alpha <- str_remove(gemm_rr$alpha, "\\s")
gemm_rr$mu <- str_remove(gemm_rr$mu, "\\s")
gemm_rr$Cause <- str_replace(gemm_rr$Cause, "Stroke\\s", "Stroke")
# coercing "numeric" columns to class numeric.
gemm_rr$`Age Range (Years)` <- as.numeric(gemm_rr$`Age Range (Years)`)
gemm_rr$theta <- as.numeric(gemm_rr$theta)
gemm_rr$theta_se <- as.numeric(gemm_rr$theta_se)
gemm_rr$alpha <- as.numeric(gemm_rr$alpha)
gemm_rr$mu <- as.numeric(gemm_rr$mu)
gemm_rr$nu <- as.numeric(gemm_rr$nu)
# renaming some columns to make them more uniform (this is given the above raw file, for a different file with a different column naming scheme, this part of the code will be rewritten).
colnames(gemm_rr)[1] <- "cause_name"
colnames(gemm_rr)[2] <- "age_range"
# assigning cause ids to causes (these ids will remain same for GBD and Meta Regression bits) and save this new dataset as gemm_rr_pre_cause_pm_expanding (more about this in next step)
gemm_rr_pre_cause_pm_expanding <- gemm_rr %>%
mutate(cause_id = 0,
cause_id = ifelse(cause_name == "Chronic obstructive pulmonary disease", 509, cause_id),
cause_id = ifelse(cause_name == "Ischaemic heart disease", 493, cause_id),
cause_id = ifelse(cause_name == "Lower respiratory infections", 322, cause_id),
cause_id = ifelse(cause_name == "Stroke", 494, cause_id),
cause_id = ifelse(cause_name == "Lung cancer", 426, cause_id),
cause_id = ifelse(cause_name == "Non-communicable disease and lower respiratory infections", 9999, cause_id))
# first set of cause id's with just a single row in the raw dataset
cause_ids_single_row <- c(509, 426, 322)
# create a list that will store cause wise datasets that will be latter appended together
list_single_row_cause_wise_data <- list()
# create the a vector that contains the lower limits of the age buckets
age_buckets_ll_vec <- seq(25, 95, 5)
# create pm buckets
pm_level_vec <- seq(0, 121, 1)
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) %>% # keeping only relevant columns
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
View(list_single_row_cause_wise_data[[1]])
# first set of cause id's with just a single row in the raw dataset
cause_ids_single_row <- c(509, 426, 322)
# create a list that will store cause wise datasets that will be latter appended together
list_single_row_cause_wise_data <- list()
# create the a vector that contains the lower limits of the age buckets
age_buckets_ll_vec <- seq(25, 95, 5)
# create pm buckets
pm_level_vec <- seq(0, 121, 1)
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) # keeping only relevant columns
# pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
VieW(list_single_row_cause_wise_data[[1]])
View(list_single_row_cause_wise_data[[1]])
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(ggplot2)
library(readr)
library(tidytext)
library(tidyr)
library(tidyverse)
library(sf)
library(usethis)
library(devtools)
library(readxl)
# load and document (for automatic rendering of the roxygen comments into a man file) to keep things updated
devtools::load_all()
devtools::document()
# custom operators
`%notin%` <- Negate(`%in%`)
# global parameters
gbd_year <- 2019
# Notes about the Global Exposure Mortality Model in Burnett et al. (2018)
# Focus primarily on 15 cohorts examining long-term exposure and mortality.
# 1 cohort is a study of Chinese men w/ exposures up to 84.
# Focus on non-accidental deaths (nearly all due to non-communicable diseases)
# and lower respiratory infections.
# Complimented with data from 26 additional cohorts (in which no access to
# subject level info).
# GEMM estimated as a common (possibly nonlinear) hazard ratio model among
# the 41 cohorts by pooling predictions of the hazard ratio among cohorts over
# their range of exposure.
# setting some parameters
ncdlri <- 1 #?
tmrel <- 2.4 # theoretical minimum pm level as per the paper.
gemm_rr_raw <- read_csv("./data/raw/gemm_rr.csv")
# making a copy of the raw file
gemm_rr <- as_tibble(gemm_rr_raw)
# remove an extra space from all character columns with numeric information and also remove an extra space from "stroke "
gemm_rr$`Age Range (Years)` <- str_remove(gemm_rr$`Age Range (Years)`, "\\s")
gemm_rr$theta <- str_remove(gemm_rr$theta, "\\s")
gemm_rr$theta_se <- str_remove(gemm_rr$theta_se, "\\s")
gemm_rr$alpha <- str_remove(gemm_rr$alpha, "\\s")
gemm_rr$mu <- str_remove(gemm_rr$mu, "\\s")
gemm_rr$nu <- str_remove(gemm_rr$nu, "\\s")
gemm_rr$Cause <- str_replace(gemm_rr$Cause, "Stroke\\s", "Stroke")
# coercing "numeric" columns to class numeric.
gemm_rr$`Age Range (Years)` <- as.numeric(gemm_rr$`Age Range (Years)`)
gemm_rr$theta <- as.numeric(gemm_rr$theta)
gemm_rr$theta_se <- as.numeric(gemm_rr$theta_se)
gemm_rr$alpha <- as.numeric(gemm_rr$alpha)
gemm_rr$mu <- as.numeric(gemm_rr$mu)
gemm_rr$nu <- as.numeric(gemm_rr$nu)
# renaming some columns to make them more uniform (this is given the above raw file, for a different file with a different column naming scheme, this part of the code will be rewritten).
colnames(gemm_rr)[1] <- "cause_name"
colnames(gemm_rr)[2] <- "age_range"
# assigning cause ids to causes (these ids will remain same for GBD and Meta Regression bits) and save this new dataset as gemm_rr_pre_cause_pm_expanding (more about this in next step)
gemm_rr_pre_cause_pm_expanding <- gemm_rr %>%
mutate(cause_id = 0,
cause_id = ifelse(cause_name == "Chronic obstructive pulmonary disease", 509, cause_id),
cause_id = ifelse(cause_name == "Ischaemic heart disease", 493, cause_id),
cause_id = ifelse(cause_name == "Lower respiratory infections", 322, cause_id),
cause_id = ifelse(cause_name == "Stroke", 494, cause_id),
cause_id = ifelse(cause_name == "Lung cancer", 426, cause_id),
cause_id = ifelse(cause_name == "Non-communicable disease and lower respiratory infections", 9999, cause_id))
View(gemm_rr_pre_cause_pm_expanding)
# first set of cause id's with just a single row in the raw dataset
cause_ids_single_row <- c(509, 426, 322)
# create a list that will store cause wise datasets that will be latter appended together
list_single_row_cause_wise_data <- list()
# create the a vector that contains the lower limits of the age buckets
age_buckets_ll_vec <- seq(25, 95, 5)
# create pm buckets
pm_level_vec <- seq(0, 121, 1)
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) # keeping only relevant columns
# pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
View(list_single_row_cause_wise_data[[1]])
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) # keeping only relevant columns
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
gemm_rr_raw <- read_csv("./data/raw/gemm_rr.csv")
# making a copy of the raw file
gemm_rr <- as_tibble(gemm_rr_raw)
# remove an extra space from all character columns with numeric information and also remove an extra space from "stroke "
gemm_rr$`Age Range (Years)` <- str_remove(gemm_rr$`Age Range (Years)`, "\\s")
gemm_rr$theta <- str_remove(gemm_rr$theta, "\\s")
gemm_rr$theta_se <- str_remove(gemm_rr$theta_se, "\\s")
gemm_rr$alpha <- str_remove(gemm_rr$alpha, "\\s")
gemm_rr$mu <- str_remove(gemm_rr$mu, "\\s")
gemm_rr$nu <- str_remove(gemm_rr$nu, "\\s")
gemm_rr$Cause <- str_replace(gemm_rr$Cause, "Stroke\\s", "Stroke")
# coercing "numeric" columns to class numeric.
gemm_rr$`Age Range (Years)` <- as.numeric(gemm_rr$`Age Range (Years)`)
gemm_rr$theta <- as.numeric(gemm_rr$theta)
gemm_rr$theta_se <- as.numeric(gemm_rr$theta_se)
gemm_rr$alpha <- as.numeric(gemm_rr$alpha)
gemm_rr$mu <- as.numeric(gemm_rr$mu)
gemm_rr$nu <- as.numeric(gemm_rr$nu)
# renaming some columns to make them more uniform (this is given the above raw file, for a different file with a different column naming scheme, this part of the code will be rewritten).
colnames(gemm_rr)[1] <- "cause_name"
colnames(gemm_rr)[2] <- "age_range"
# assigning cause ids to causes (these ids will remain same for GBD and Meta Regression bits) and save this new dataset as gemm_rr_pre_cause_pm_expanding (more about this in next step)
gemm_rr_pre_cause_pm_expanding <- gemm_rr %>%
mutate(cause_id = 0,
cause_id = ifelse(cause_name == "Chronic obstructive pulmonary disease", 509, cause_id),
cause_id = ifelse(cause_name == "Ischaemic heart disease", 493, cause_id),
cause_id = ifelse(cause_name == "Lower respiratory infections", 322, cause_id),
cause_id = ifelse(cause_name == "Stroke", 494, cause_id),
cause_id = ifelse(cause_name == "Lung cancer", 426, cause_id),
cause_id = ifelse(cause_name == "Non-communicable disease and lower respiratory infections", 9999, cause_id))
# first set of cause id's with just a single row in the raw dataset
cause_ids_single_row <- c(509, 426, 322)
# create a list that will store cause wise datasets that will be latter appended together
list_single_row_cause_wise_data <- list()
# create the a vector that contains the lower limits of the age buckets
age_buckets_ll_vec <- seq(25, 95, 5)
# create pm buckets
pm_level_vec <- seq(0, 121, 1)
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) # keeping only relevant columns
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) %>% # keeping only relevant columns
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
View(list_single_row_cause_wise_data[[1]])
# set of cause ids for which we have age wise datasets
cause_ids_age_wise <- c(493, 494, 9999)
# create a list that will store cause wise datasets (for those causes on whch we have age wise datasets) that will be later appended together
list_age_bucketed_cause_wise_data <- list()
#
for(j in 1:length(cause_ids_age_wise)){
tmp_df <- tibble(pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_age_bucketed_cause_wise_data[[j]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_age_wise[j]) %>%
mutate(age_buckets_ll = age_range - 2.5,
age_buckets_ll = ifelse(age_buckets_ll == 82.5, 80, age_buckets_ll)) %>%
select(-age_range) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 85, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 90, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 95, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_)
# pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
View(list_age_bucketed_cause_wise_data[[1]])
View(list_single_row_cause_wise_data[[1]])
View(list_age_bucketed_cause_wise_data[[1]])
27450/122
tmp_df <- tibble(pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
tmp_df
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(ggplot2)
library(readr)
library(tidytext)
library(tidyr)
library(tidyverse)
library(sf)
library(usethis)
library(devtools)
library(readxl)
# load and document (for automatic rendering of the roxygen comments into a man file) to keep things updated
devtools::load_all()
devtools::document()
# custom operators
`%notin%` <- Negate(`%in%`)
# global parameters
gbd_year <- 2019
# Notes about the Global Exposure Mortality Model in Burnett et al. (2018)
# Focus primarily on 15 cohorts examining long-term exposure and mortality.
# 1 cohort is a study of Chinese men w/ exposures up to 84.
# Focus on non-accidental deaths (nearly all due to non-communicable diseases)
# and lower respiratory infections.
# Complimented with data from 26 additional cohorts (in which no access to
# subject level info).
# GEMM estimated as a common (possibly nonlinear) hazard ratio model among
# the 41 cohorts by pooling predictions of the hazard ratio among cohorts over
# their range of exposure.
# setting some parameters
ncdlri <- 1 #?
tmrel <- 2.4 # theoretical minimum pm level as per the paper.
# load relative risks dataset from Burnett et al (2018 paper) supplementary information section table 2 (S2) and getting it into a format similar to the GBD (IER) relative risks file. We created this file using table S2.
gemm_rr_raw <- read_csv("./data/raw/gemm_rr.csv")
# making a copy of the raw file
gemm_rr <- as_tibble(gemm_rr_raw)
# remove an extra space from all character columns with numeric information and also remove an extra space from "stroke "
gemm_rr$`Age Range (Years)` <- str_remove(gemm_rr$`Age Range (Years)`, "\\s")
gemm_rr$theta <- str_remove(gemm_rr$theta, "\\s")
gemm_rr$theta_se <- str_remove(gemm_rr$theta_se, "\\s")
gemm_rr$alpha <- str_remove(gemm_rr$alpha, "\\s")
gemm_rr$mu <- str_remove(gemm_rr$mu, "\\s")
gemm_rr$nu <- str_remove(gemm_rr$nu, "\\s")
gemm_rr$Cause <- str_replace(gemm_rr$Cause, "Stroke\\s", "Stroke")
# coercing "numeric" columns to class numeric.
gemm_rr$`Age Range (Years)` <- as.numeric(gemm_rr$`Age Range (Years)`)
gemm_rr$theta <- as.numeric(gemm_rr$theta)
gemm_rr$theta_se <- as.numeric(gemm_rr$theta_se)
gemm_rr$alpha <- as.numeric(gemm_rr$alpha)
gemm_rr$mu <- as.numeric(gemm_rr$mu)
gemm_rr$nu <- as.numeric(gemm_rr$nu)
# renaming some columns to make them more uniform (this is given the above raw file, for a different file with a different column naming scheme, this part of the code will be rewritten).
colnames(gemm_rr)[1] <- "cause_name"
colnames(gemm_rr)[2] <- "age_range"
# assigning cause ids to causes (these ids will remain same for GBD and Meta Regression bits) and save this new dataset as gemm_rr_pre_cause_pm_expanding (more about this in next step)
gemm_rr_pre_cause_pm_expanding <- gemm_rr %>%
mutate(cause_id = 0,
cause_id = ifelse(cause_name == "Chronic obstructive pulmonary disease", 509, cause_id),
cause_id = ifelse(cause_name == "Ischaemic heart disease", 493, cause_id),
cause_id = ifelse(cause_name == "Lower respiratory infections", 322, cause_id),
cause_id = ifelse(cause_name == "Stroke", 494, cause_id),
cause_id = ifelse(cause_name == "Lung cancer", 426, cause_id),
cause_id = ifelse(cause_name == "Non-communicable disease and lower respiratory infections", 9999, cause_id))
#> for each cause, expand rows into consistent format
# Assumption: causes: 509, 426, 322: these are the causes for which we do not have age-wise/pm-level information, i.e. just a single row in the "raw" dataset. So, for each of these causes, we will assign their exact same information to age intervals starting from 25 and going to 95+, i.e. we are assuming that all of the information available for each of these causes stays the same for all age groups, hence we will extend that information to all those age groups by extending the dataset. Then, we will take the output of that process and assign it to pm levels starting from 1 to 120 micrograms per cubic meter. So, each pm level will have that exact same age wise data.
# first set of cause id's with just a single row in the raw dataset
cause_ids_single_row <- c(509, 426, 322)
# create a list that will store cause wise datasets that will be latter appended together
list_single_row_cause_wise_data <- list()
# create the a vector that contains the lower limits of the age buckets
age_buckets_ll_vec <- seq(25, 95, 5)
# create pm buckets
pm_level_vec <- seq(0, 121, 1)
for(i in 1 : length(cause_ids_single_row)){
# create a temp dataframe of with 2 columns: age_buckets_ll, pm_buckets and adding new columns that will be fed into the formula that outputs the relative risks (under table S2 in the supplementary information section of the Apte 2018 paper). Then finally reshape the dataset for an easy merge later. The "age_" column in the output is the one that contains relative risks information.
tmp_df <- tibble(age_buckets_ll = rep(age_buckets_ll_vec, times = length(pm_level_vec)),
pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_single_row_cause_wise_data[[i]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_single_row[i]) %>%
slice(rep(1:n(), times = nrow(tmp_df))) %>%
cbind(tmp_df) %>%
select(-age_range) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) %>% # keeping only relevant columns
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
# causes: 493, 494, 9999: For these causes, we have age wise data, but the age brackets are a little different, for e.g. 27.5 instead of 25. So, the first step is to round down the age intervals to ones that fit our format, which starts from 25 and goes till 95+ and assign the same data as was assigned to their nearest age bracket, so data for "27.5" would be assigned to "25", data for "32.5" will be assigned to "30". Also, because our format contains more age brackets than is available in the data provided by the authors, so the last 3 age brackets, i.e. 85, 90, 95, will get the same value as the "80" age bracket. Then each of the pm brackets will be assigned the exact same dataset. In total there are 122 pm levels and each of these levels will be assigned, the same age-bucketed dataset. After that we will reshape it to wide, similar to what we did in the above cause list.
# set of cause ids for which we have age wise datasets
cause_ids_age_wise <- c(493, 494, 9999)
# create a list that will store cause wise datasets (for those causes on whch we have age wise datasets) that will be later appended together
list_age_bucketed_cause_wise_data <- list()
#
for(j in 1:length(cause_ids_age_wise)){
tmp_df <- tibble(pm_level = rep(pm_level_vec, each = length(age_buckets_ll_vec)))
list_age_bucketed_cause_wise_data[[j]] <- gemm_rr_pre_cause_pm_expanding %>%
filter(cause_id == cause_ids_age_wise[j]) %>%
mutate(age_buckets_ll = age_range - 2.5,
age_buckets_ll = ifelse(age_buckets_ll == 82.5, 80, age_buckets_ll)) %>%
select(-age_range) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 85, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 90, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
add_row(cause_name = .$cause_name[nrow(.)], cause_id = .$cause_id[nrow(.)], age_buckets_ll = 95, theta = .$theta[nrow(.)], theta_se = .$theta_se[nrow(.)], alpha = .$alpha[nrow(.)], mu = .$mu[nrow(.)], nu = .$nu[nrow(.)]) %>%
slice(rep(1:n(), times = length(pm_level_vec))) %>%
cbind(tmp_df) %>%
mutate(x = pm_level - tmrel,
z = pmax(0, x),
age_ = exp(theta*(log(z/alpha+1)) / (1+exp(-(z-mu)/nu)))) %>%
select(cause_name, cause_id, pm_level, age_buckets_ll, age_) %>%
pivot_wider(names_from = "age_buckets_ll", names_prefix = "age_", values_from = "age_")
}
View(list_age_bucketed_cause_wise_data[[1]])
View(list_age_bucketed_cause_wise_data[[3]])
bind_rows(list_single_row_cause_wise_data)
relative_risks_data_gemm_wide <- bind_rows(bind_rows(list_single_row_cause_wise_data), list_age_bucketed_cause_wise_data)
View(relative_risks_data_gemm_wide)
?pivot_longer
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll", values_to = "foo")
View(relative_risks_data_gemm_long)
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll", names_pattern = "\\d", values_to = "age_")
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll", names_pattern = "\\d+", values_to = "age_")
vignette("longer")
vignette("pivot_longer")
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll", names_prefix = "age_", values_to = "age_")
class(relative_risks_data_gemm_long$age_interval_ll)
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll",
names_prefix = "age_", names_transform = list(age_interval_ll = as.integer),
values_to = "age_")
relative_risks_data_gemm_wide_final <- relative_risks_data_gemm_long %>%
pivot_wider(names_from = "pm_level", names_prefix = "relative_risk", values_from = relative_risk)
relative_risks_data_gemm_wide_final <- relative_risks_data_gemm_long %>%
pivot_wider(names_from = "pm_level", names_prefix = "relative_risk", values_from = "relative_risk")
#> reshape dataset to long so that we can easily rename the "age_" columns
relative_risks_data_gemm_long <- relative_risks_data_gemm_wide %>%
pivot_longer(cols = starts_with("age_"), names_to = "age_interval_ll",
names_prefix = "age_", names_transform = list(age_interval_ll = as.integer),
values_to = "age_") %>%
rename(relative_risk = age_)
relative_risks_data_gemm_wide_final <- relative_risks_data_gemm_long %>%
pivot_wider(names_from = "pm_level", names_prefix = "relative_risk", values_from = "relative_risk")
View(relative_risks_data_gemm_wide_final)
nrow(relative_risks_data_gemm_wide_final)
count(relative_risks_data_gemm_wide_final, cause_name, age_buckets_ll)
count(relative_risks_data_gemm_wide_final, cause_name, age_interval_ll)
#> benchmarking
start_time <- Sys.time()
